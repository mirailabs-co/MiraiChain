"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[395],{3905:(t,e,r)=>{r.d(e,{Zo:()=>c,kt:()=>y});var o=r(7294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,o)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function s(t,e){if(null==t)return{};var r,o,n=function(t,e){if(null==t)return{};var r,o,n={},a=Object.keys(t);for(o=0;o<a.length;o++)r=a[o],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(o=0;o<a.length;o++)r=a[o],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var p=o.createContext({}),u=function(t){var e=o.useContext(p),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},c=function(t){var e=u(t.components);return o.createElement(p.Provider,{value:e},t.children)},d="mdxType",l={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},m=o.forwardRef((function(t,e){var r=t.components,n=t.mdxType,a=t.originalType,p=t.parentName,c=s(t,["components","mdxType","originalType","parentName"]),d=u(r),m=n,y=d["".concat(p,".").concat(m)]||d[m]||l[m]||a;return r?o.createElement(y,i(i({ref:e},c),{},{components:r})):o.createElement(y,i({ref:e},c))}));function y(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var a=r.length,i=new Array(a);i[0]=m;var s={};for(var p in e)hasOwnProperty.call(e,p)&&(s[p]=e[p]);s.originalType=t,s[d]="string"==typeof t?t:n,i[1]=s;for(var u=2;u<a;u++)i[u]=r[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8868:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var o=r(7462),n=(r(7294),r(3905));const a={sidebar_position:3},i="Liquidity Pool",s={unversionedId:"grootswap/add-lp",id:"grootswap/add-lp",title:"Liquidity Pool",description:"Adding liquidity to a pool on GrootSwap is not just about participating in the DeFi ecosystem; it's also an opportunity to earn a share of the trading fees. In this guide, we'll walk you through the simple steps to get started.",source:"@site/docs/grootswap/add-lp.md",sourceDirName:"grootswap",slug:"/grootswap/add-lp",permalink:"/docs/grootswap/add-lp",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/grootswap/add-lp.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Deployment",permalink:"/docs/grootswap/deployment"}},p={},u=[{value:"Why Create/Add Liquidity?",id:"why-createadd-liquidity",level:3},{value:"How To Create Liquidity?",id:"how-to-create-liquidity",level:3}],c={toc:u},d="wrapper";function l(t){let{components:e,...r}=t;return(0,n.kt)(d,(0,o.Z)({},c,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"liquidity-pool"},"Liquidity Pool"),(0,n.kt)("p",null,"Adding liquidity to a pool on GrootSwap is not just about participating in the DeFi ecosystem; it's also an opportunity to earn a share of the trading fees. In this guide, we'll walk you through the simple steps to get started."),(0,n.kt)("h3",{id:"why-createadd-liquidity"},"Why Create/Add Liquidity?"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Earn Passive Income"),": Receive a portion of the trading fees generated from the pool."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Contribute to the Ecosystem"),": Help in maintaining the liquidity of your favorite tokens.")),(0,n.kt)("h3",{id:"how-to-create-liquidity"},"How To Create Liquidity?"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},'import { MaxUint256, parseEther, parseUnits } from "ethers";\nimport { task } from "hardhat/config";\nimport type { TaskArguments } from "hardhat/types";\nimport { ethers } from "hardhat";\nimport { MyToken } from "@app/types";\n\ntask("createLP")\n    .addParam("token", "Address of your token")\n    .addParam("amount", "Amount of your token without decimals")\n    .addParam("amountpgx", "Amount of PGX without decimals")\n    .setAction(async function (taskArguments: TaskArguments, { ethers }) {\n        const [signer] = await ethers.getSigners();\n        const Router = await ethers.getContractAt("GrootRouter", "0xfB335A59FE0A24BDb01B3B7dcA4d9843B696ebcC");\n        const MyTokenFactory = await ethers.getContractFactory("MyToken");\n        const token: MyToken = <MyToken>await MyTokenFactory.connect(signer).attach(taskArguments.token);\n        const amount = parseUnits(taskArguments.amount, await token.decimals());\n        const value = parseEther(taskArguments.amountpgx);\n        const approve = await token.allowance(signer.address, await Router.getAddress());\n        if (approve < amount) {\n            await token.approve(await Router.getAddress(), MaxUint256);\n        }\n        const tx = await Router.connect(signer).addLiquidityETH(await token.getAddress(), amount, 0, 0, signer.address, 8888888888, {\n            value,\n            gasLimit: 5000000,\n        });\n        console.log(`Created LP at:`, tx.hash);\n    });\n')))}l.isMDXComponent=!0}}]);